{
  // Place your portal-customer workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Gerar input com formControlName": {
    "prefix": "cg-input-text",
    "body": [
      "<div class=\"p-field\">",
      "   <label for=\"testando\">Username</label>",
      "   <input type=\"type\" formControlName=\"testando\" class=\"ng-invalid ng-dirty\" pInputText />",
      "   <small *ngIf=\"loginForm.controls['testando'].invalid && (loginForm.controls['testando'].dirty || loginForm.controls['testando'].touched)\" class=\"p-error\">Username é obrigatório.</small>",
      "</div>"
    ],
    "description": "Gerar input com formControlName"
  },
  "Gerar select com formControlName": {
    "prefix": "cg-select",
    "body": [
      "<p-dropdown [options]=\"cities\" optionLabel=\"name\" optionValue=\"code\" formControlName=\"testando\"></p-dropdown>"
    ],
    "description": "Gerar select com formControlName"
  }
}
